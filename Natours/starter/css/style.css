/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Universal selector will each and every
element on the page and apply this declaration */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.801),
      rgba(40, 180, 133, 0.801)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute; /* The parent element should have a relative position, take a look at html*/
  top: 40px; /*This will be count from header origin*/
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* backface-visibility: hidden; */
  margin-bottom: 60px;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 700;
  letter-spacing: 35px;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /*
    Kind of animations
    animation-delay: 3s;
    animation-iteration-count: 3; // will repeat three times
  */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 400;
  letter-spacing: 17.4px;
  animation: moveInRight 1s ease-out; /*shorthand to do the exact same thing but css will carefully this for us*/
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  80% {
    transform: translateX(10px);
  }
  100% {
    opacity: 1;
    transform: translatex(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  80% {
    transform: translateX(-10px);
  }
  100% {
    opacity: 1;
    transform: translatex(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}


/*
  We want that the link visited looks like exactly like the link state,
  because of that we put it togetther
*/

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none; /*remove the underscore from link*/
  padding: 15px 40px; /*It is setting top right bottom left padding*/
  display: inline-block; /*It will be works like a BLOCK elemente...We should always do this if we want some paddings, height or width*/
  border-radius: 100px; /*If I put a higher number here the border is still the same*/
  transition: all 0.2s; /*all props will be available to use animations and the .2s is the during time*/
  position: relative; /*Now it should be hidden behind the button*/
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2); /*eixo X, Y, Blurry, color */
}
/* when We click on button */
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: #fff;
  color: #777;
}

/*
  It will looks like a button behind the button when
  we houver it
*/
.btn::after {
  content: ""; /*it is required ever*/
  display: inline-block; /*inline block because the button that we have is already inline-block*/
  height: 100%; /*we want to look the same original button*/
  width: 100%; /*we want to look the same original button*/
  border-radius: 100px; /* It could be a higher value */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1; /*ensure that will be behind the button*/
  transition: all .4s;
}

.btn-white::after {
  background-color: #fff
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6); /*that increases the element*/
  opacity: 0; /*sets something invisible basically*/
}

.btn-animated {
  animation: moveInBottom .5s ease-out .75s;
  animation-fill-mode: backwards;
}
