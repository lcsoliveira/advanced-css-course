@charset "UTF-8";
/* Universal selector will each and every
element on the page and apply this declaration */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* box-sizing is not inherited but using this code below it is */
  box-sizing: inherit; }

html {
  /* root size is now 10px is more easy to change all others props to REM unit */
  /* font-size: 10px; */
  /* To ensure that is 10px of default value of browser 10/16 = 0.625 */
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translatex(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translatex(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* backface-visibility: hidden; */
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 700;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /*
      Kind of animations
      animation-delay: 3s;
      animation-iteration-count: 3; // will repeat three times
    */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
    /*shorthand to do the exact same thing but css will carefully this for us*/ }

.btn {
  /*
  We want that the link visited looks like exactly like the link state,
  because of that we put it togetther
*/
  /* when We click on button */
  /*
    It will looks like a button behind the button when
    we houver it
  */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    /*remove the underscore from link*/
    padding: 1.5rem 4rem;
    /*It is setting top right bottom left padding*/
    display: inline-block;
    /*It will be works like a BLOCK elemente...We should always do this if we want some paddings, height or width*/
    border-radius: 10rem;
    /*If I put a higher number here the border is still the same*/
    transition: all 0.2s;
    /*all props will be available to use animations and the .2s is the during time*/
    position: relative;
    /*Now it should be hidden behind the button*/
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /*eixo X, Y, Blurry, color */ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      /*that increases the element*/
      opacity: 0;
      /*sets something invisible basically*/ }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    content: "";
    /*it is required ever*/
    display: inline-block;
    /*inline block because the button that we have is already inline-block*/
    height: 100%;
    /*we want to look the same original button*/
    width: 100%;
    /*we want to look the same original button*/
    border-radius: 10rem;
    /* It could be a higher value */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    /*ensure that will be behind the button*/
    transition: all .4s; }
  .btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards; }

/*
  Por padrão usaremos 1140px como width para o row selector
  Mas como definimos que não usaremos px para length usaremos a unit REM
  Logo, vale lembrar que definimos que o base é 10px 1140/10 = 114rem
*/
.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2);
    background-color: orangered;
    float: left; }
    .row .col-1-of-2:not(:last-child) {
      margin-right: 6rem; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.801), rgba(40, 180, 133, 0.801)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    /* The parent element should have a relative position, take a look at html*/
    top: 4rem;
    /*This will be count from header origin*/
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }
